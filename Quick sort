// always the last element becomes pivot
int myPartition(int arr[], int start, int end)
{
    int i = start-1;
    int pivot = arr[end];
    for(int j=start; j<= end-1; j++)
    {
        if(arr[j] <= pivot)
        {
            i++;
            swap(arr[i],arr[j]);
        }
    }
    swap(arr[i+1], arr[end]);
    return i+1;
}



void quickSort(int arr[], int start, int end)
{
    if(start < end)
    {
        int pi = myPartition(arr, start, end);
        quickSort(arr,start,pi-1);
        quickSort(arr,pi+1,end);

    }

}
